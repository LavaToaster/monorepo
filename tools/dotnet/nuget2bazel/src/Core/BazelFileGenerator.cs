using System;
using System.Collections.Generic;
using System.Text.Encodings.Web;
using System.Text.Json;
using nuget2bazel.Models;

namespace nuget2bazel.Core;

/// <summary>
/// Generates Bazel build files from NuGet package information.
/// </summary>
public class BazelFileGenerator
{
    private const string DefaultBazelRepoName = "nuget";
    
    private readonly string _repoName;
    
    /// <summary>
    /// Initializes a new instance of the <see cref="BazelFileGenerator"/> class.
    /// </summary>
    /// <param name="repoName">The name of the Bazel repository.</param>
    public BazelFileGenerator(string repoName = DefaultBazelRepoName)
    {
        ArgumentNullException.ThrowIfNull(repoName);

        _repoName = repoName;
    }
    
    /// <summary>
    /// Generates a Bazel file from a list of NuGet packages.
    /// </summary>
    /// <param name="packages">The list of NuGet packages.</param>
    /// <returns>The Bazel file content as a string.</returns>
    public string Generate(IReadOnlyList<RulesDotnetNugetPackage> packages)
    {
        ArgumentNullException.ThrowIfNull(packages);

        // Marshal the packages to JSON with nice formatting
        var packagesJson = JsonSerializer.Serialize(packages, new JsonSerializerOptions
        {
            Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping,
            WriteIndented = true
        });
        
        // Format the JSON for Bazel compatibility, ensuring proper indentation
        var jsonString = packagesJson;
        
        // Ensure the JSON is indented properly for Bazel files
        if (packages.Count > 0)
        {
            // Replace newlines with newline + indentation (4 spaces)
            jsonString = "[" + 
                         jsonString.TrimStart('[').Replace("\n", "\n    ");
        }

        // Create the final Bazel file content using modern string interpolation syntax
        return $""""
                # Auto-generated by nuget2bazel
                load("@rules_dotnet//dotnet:defs.bzl", "nuget_repo")

                def nuget_packages():
                  """Defines the NuGet packages."""
                  nuget_repo(
                      name = "{_repoName}",
                      packages = {jsonString}
                  )
                """";
    }
}
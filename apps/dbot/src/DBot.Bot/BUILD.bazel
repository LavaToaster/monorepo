load("@rules_dotnet//dotnet:defs.bzl", "csharp_binary", "publish_binary")
load("//prelude/dotnet:defs.bzl", "csharp_globalusings")

csharp_binary(
    name = "DBot.Bot",
    srcs = [
        "Configuration/DiscordBotConfiguration.cs",
        "Embeds/AssettoServerEmbedFactory.cs",
        "Embeds/StatusEmbedGenerator.cs",
        "Hosting/AssettoServerMonitorService.cs",
        "Hosting/DiscordBotService.cs",
        "InteractionModules/AssettoServerCommandModule.cs",
        "InteractionModules/AssettoServerInteractionModule.cs",
        "InteractionModules/Autocomplete/RoleMirrorSourceRoleAutocompleteHandler.cs",
        "InteractionModules/Autocomplete/RoleMirrorTargetRoleAutocompleteHandler.cs",
        "InteractionModules/MessageCommandModule.cs",
        "InteractionModules/MessageInteractionsModule.cs",
        "InteractionModules/RoleMirrorCommandModule.cs",
        "Interfaces/IAssettoServerService.cs",
        "Modals/ServerDetailsModal.cs",
        "Models/Assetto/AddServerResult.cs",
        "Program.cs",
        "Services/AssettoServerService.cs",
        "Services/AssettoStatusMessageGenerator.cs",
        "Services/RoleMirrorService.cs",
        "Services/RoleSyncService.cs",
        "Util/Time/ClockFace.cs",
        "Util/Time/ClockFaceUtil.cs",
        "Util/Time/DateTimeExtensions.cs",
        ":DBot.Bot.GlobalUsings",
    ],
    appsetting_files = ["appsettings.json"] + glob(["appsettings.*.json"]),
    # To get this far I needed to do the following:
    # 1. Use direct dependencies only (see resolve.go for updating the logic to output that)
    # 2. Flip the flag in bazel rc
    # 3. Add some logic in the rules_dotnet to prioritise dependency analyzers over the targeting pack
    #
    # And well, great it compiles. But it doesn't run. I get the following error:
    #   Could not load file or assembly 'Microsoft.Extensions.Hosting, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'
    #
    # Oh, and the examples in simple_dotnet break when we use direct dependencies only...
    #
    # I'm stuck on this for now. :(
    compiler_options = ["/features:InterceptorsPreviewNamespaces=Microsoft.Extensions.Configuration.Binder.SourceGeneration"],
    data = [
        "dbot.db",
    ],
    nullable = "enable",
    project_sdk = "web",
    target_frameworks = ["net8.0"],
    # envs = {
    #     "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT": "1",
    #     "COREHOST_TRACE": "1",
    #     "DOTNET_ASSEMBLY_LOAD_CONTEXT_DEBUG": "1",
    #     # "DOTNET_ROLL_FORWARD": "LatestMajor",
    #     "DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX": "2",
    # },
    deps = [
        "//apps/dbot/src/DBot.Core",
        "//apps/dbot/src/DBot.Integrations.Assetto",
        "@nuget_apps_dbot_src_dbot.bot//discord.net/3.17.2",
        "@nuget_apps_dbot_src_dbot.bot//microsoft.entityframeworkcore.design/9.0.4",
        "@nuget_apps_dbot_src_dbot.bot//microsoft.extensions.hosting/9.0.4",
    ],
)

csharp_globalusings(
    name = "DBot.Bot.GlobalUsings",
    sdk = "Microsoft.NET.Sdk.Worker",
)

publish_binary(
    name = "publish",
    binary = ":DBot.Bot",
    runtime_identifier = "osx-arm64",
    target_framework = "net8.0",
)
